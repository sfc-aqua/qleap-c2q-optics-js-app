# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
    - run: npm run build:prod
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: |
          dist/*

  deploy:
    needs: build
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'gh-pages'
      - name: cleanup worktree
        run: rm -rf ./*
      - uses: actions/download-artifact@v2
        with:
          name: dist
      - name: setup git
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          echo "$DEPLOY_KEY" > ~/deploy_key.pem
          chmod 600 ~/deploy_key.pem
          git config remote.origin.url  "git@github.com:sfc-aqua/qleap-c2q-optics-js-app.git"
          git config user.name "GitHub Actions Bot"
          git config user.email "sfc-aqua@users.noreply.github.com"
      - name: commit and push
        env:
          GIT_SSH_COMMAND: ssh -i ~/deploy_key.pem -o StrictHostKeyChecking=no -F /dev/null
        run: |
          git add .
          git commit -m "[release] build: https://github.com/sfc-aqua/qleap-c2q-optics-js-app/commit/$GITHUB_SHA" || true
          git push origin gh-pages -f

